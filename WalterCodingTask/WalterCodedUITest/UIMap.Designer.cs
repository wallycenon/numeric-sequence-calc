// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace WalterCodedUITest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            HtmlEdit uITxtNumberEdit = this.UIHttplocalhost60043MaWindow.UIHttplocalhost60043MaDocument.UITxtNumberEdit;
            #endregion

            // Type '16' in 'txtNumber' text box
            uITxtNumberEdit.Text = this.RecordedMethod1Params.UITxtNumberEditText;

            // Element not available
        }
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            HtmlSpan uISuccessPane = this.UIHttplocalhost60043MaWindow.UIHttplocalhost60043MaDocument.UISuccessPane;
            #endregion

            // Verify that the 'DisplayText' property of 'Success' pane equals 'Success'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UISuccessPaneDisplayText, uISuccessPane.DisplayText);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public UIHttplocalhost60043MaWindow UIHttplocalhost60043MaWindow
        {
            get
            {
                if ((this.mUIHttplocalhost60043MaWindow == null))
                {
                    this.mUIHttplocalhost60043MaWindow = new UIHttplocalhost60043MaWindow();
                }
                return this.mUIHttplocalhost60043MaWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private UIHttplocalhost60043MaWindow mUIHttplocalhost60043MaWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '16' in 'txtNumber' text box
        /// </summary>
        public string UITxtNumberEditText = "16";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Success' pane equals 'Success'
        /// </summary>
        public string UISuccessPaneDisplayText = "Success";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttplocalhost60043MaWindow : BrowserWindow
    {
        
        public UIHttplocalhost60043MaWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "http://localhost:60043/Main.aspx";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("http://localhost:60043/Main.aspx");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIHttplocalhost60043MaDocument UIHttplocalhost60043MaDocument
        {
            get
            {
                if ((this.mUIHttplocalhost60043MaDocument == null))
                {
                    this.mUIHttplocalhost60043MaDocument = new UIHttplocalhost60043MaDocument(this);
                }
                return this.mUIHttplocalhost60043MaDocument;
            }
        }
        #endregion
        
        #region Fields
        private UIHttplocalhost60043MaDocument mUIHttplocalhost60043MaDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHttplocalhost60043MaDocument : HtmlDocument
    {
        
        public UIHttplocalhost60043MaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = null;
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/Main.aspx";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:60043/Main.aspx";
            this.WindowTitles.Add("http://localhost:60043/Main.aspx");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UITxtNumberEdit
        {
            get
            {
                if ((this.mUITxtNumberEdit == null))
                {
                    this.mUITxtNumberEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUITxtNumberEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "txtNumber";
                    this.mUITxtNumberEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "txtNumber";
                    this.mUITxtNumberEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = null;
                    this.mUITxtNumberEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUITxtNumberEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUITxtNumberEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = null;
                    this.mUITxtNumberEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"txtNumber\" id=\"txtNumber\" required";
                    this.mUITxtNumberEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUITxtNumberEdit.WindowTitles.Add("http://localhost:60043/Main.aspx");
                    #endregion
                }
                return this.mUITxtNumberEdit;
            }
        }
        
        public HtmlSpan UISuccessPane
        {
            get
            {
                if ((this.mUISuccessPane == null))
                {
                    this.mUISuccessPane = new HtmlSpan(this);
                    #region Search Criteria
                    this.mUISuccessPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "lblSuccess";
                    this.mUISuccessPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUISuccessPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Success";
                    this.mUISuccessPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUISuccessPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUISuccessPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"lblSuccess\"";
                    this.mUISuccessPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "1";
                    this.mUISuccessPane.WindowTitles.Add("http://localhost:60043/Main.aspx");
                    #endregion
                }
                return this.mUISuccessPane;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUITxtNumberEdit;
        
        private HtmlSpan mUISuccessPane;
        #endregion
    }
}
